apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: inventory
    version: v1
    app.kubernetes.io/instance: inventory
    app.kubernetes.io/part-of: inventory
    app.kubernetes.io/name: java
  name: inventory-v1
spec:
  replicas: 1
  selector:
    app: inventory
    version: v1
    app.kubernetes.io/instance: inventory
  revisionHistoryLimit: 2
  strategy:
    activeDeadlineSeconds: 21600
    resources:
      limits:
        cpu: 500m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 3600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: inventory
        version: v1
        app.kubernetes.io/instance: inventory
    spec:
      containers:
        - args:
            - -c
            - until $(curl -o /dev/null -s -I -f http://127.0.0.1:15000); do echo \"Waiting for Istio Sidecar...\"; sleep 1; done; sleep 10; /deployments/run-java.sh -Dquarkus.http.host=0.0.0.0
          command:
            - /bin/bash
          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          image: image-registry.openshift-image-registry.svc:5000/demo/inventory:b3c8f4af0b709f007b986f813798b0bbd5ed240a
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://127.0.0.1:8080/q/health/live
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: inventory
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 9779
              name: prometheus
              protocol: TCP
            - containerPort: 8778
              name: jolokia
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - curl
                - -f
                - http://127.0.0.1:8080/q/health/ready
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /work/config
              name: volume-app-config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: inventory
          name: volume-app-config
